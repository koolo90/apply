plugins {
    id "java"
    id "war"
    id("org.springframework.boot") version "3.5.0"
    id("io.spring.dependency-management") version "1.1.7"
}

apply plugin: 'war'

group = "com.brocode"
version = "0.0.1-SNAPSHOT"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom(configurations.annotationProcessor)
    }
}

dependencies {
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
    implementation 'org.apache.commons:commons-collections4:4.5.0'
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    runtimeOnly "org.postgresql:postgresql"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.assertj:assertj-core:4.0.0-M1"
    testImplementation "com.h2database:h2:2.3.232"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    implementation 'org.junit.platform:junit-platform-suite:1.13.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'
}

test {
    useJUnitPlatform()
}

war {
    archiveFileName = "apply-spring.war"
}

tasks.register('redeploy', Exec) {
    group = 'deployment'
    dependsOn war

    def warTaskByName = tasks.war
    def archiveFileName = warTaskByName.archiveFileName.get()
    def deployPath = "/" + warTaskByName.archiveFileName.get().replace(".war", "")
    def buildDir = layout.buildDirectory.get()
    def warFile = file("$buildDir/libs/${archiveFileName}")
    def port = 8080
    def host = "127.0.0.1"
    def user = "script"
    def pass = "s3cret"
    def url = "http://${host}:${port}/manager/text/deploy?path=${deployPath}&update=true"
    def authentification = "${user}:${pass}"

    println "Execution of command: curl -u ${authentification} -T ${warFile} ${url}"

    commandLine 'curl', '-u', authentification, '-T', warFile, url
}